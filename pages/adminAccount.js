import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import unfLogo from '../public/UNF_Logo.gif'
import {useEffect, useState} from "react";
import Link from 'next/link'
/*Reports Page
Shows unresolved reports
'http://localhost:3000/api/getAccounts'


*/

function exportTableToExcel(tableID, filename = ''){
  var downloadLink;
  var dataType = 'application/vnd.ms-excel';
  var tableSelect = document.getElementById(tableID);
  var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');
  
  // Specify file name
  filename = filename?filename+'.xls':'excel_data.xls';
  
  // Create download link element
  downloadLink = document.createElement("a");
  
  document.body.appendChild(downloadLink);
  
  if(navigator.msSaveOrOpenBlob){
      var blob = new Blob(['\ufeff', tableHTML], {
          type: dataType
      });
      navigator.msSaveOrOpenBlob( blob, filename);
  }else{
      // Create a link to the file
      downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
  
      // Setting the file name
      downloadLink.download = filename;
      
      //triggering the function
      downloadLink.click();
  }
}
export default function Home() {
const [query, setQuery] = useState("")
const [dataResponse, setdataResponse] = useState([]);

useEffect(() => {
  async function getPageData() {
    const response = await fetch('/api/get_accounts');
    const res = await response.json();
    console.log("Output:",res);
  setdataResponse(res.accounts);
  }

getPageData();
}, []);
  return (
<div>
      <Head>
        <title>AdminReports</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
                <Link href="/home"><Image className={styles.image} src={unfLogo} alt="UNF"/></Link>
                <span className={styles.headerContent}>
                    {/* Removed old links, they were not needed for production */}
                    <button type="button" className={styles.headerButton}>Logout</button>
                </span>
            </header>
      
            <main>
            <div className={styles.breadcrumb}>
                    <Link href="/home">Home</Link>
                </div>


     
                <div className={styles.description}>
                    <button type="button" className={styles.approveButton} onClick={()=>exportTableToExcel("tableID")}>Export</button>
                    <br></br>
                    <input type="text" id="input"  placeholder="Filter" className="search-input" data-table="reports-list" onChange={event => setQuery(event.target.value)}></input>
                </div>



                <table id="tableID" className={styles.table}>
                   <thead>
                     <tr>
                       <th className={styles.container}>Account ID</th>
                         <th className={styles.container}>Role</th>
                         <th className={styles.container}>First Name</th>
                         <th className={styles.container}>Last Name</th>
                         <th className={styles.container}>UserName</th>
                         <th className={styles.container}>Password</th>
                         <th className={styles.container}>Email</th>
                        <th className={styles.container}>Account Status</th>
                     </tr>
                  </thead>


  {dataResponse.filter(account => {
    if (query === '') {
      return account;
    } 
    if (account.role.toLowerCase().includes(query.toLowerCase())) {
      return account;
    }
    if (account.first_name.toLowerCase().includes(query.toLowerCase())) {
      return account;
    }
    if (account.last_name.toLowerCase().includes(query.toLowerCase())) {
      return account;
    }
    if (account.username.toString().includes(query.toLowerCase())) {
      return account;
    }
    if (account.password.toString().includes(query.toLowerCase())) {
      return account;
    }
    if (account.account_id.toString().includes(query.toLowerCase())) {
      return account;
    }
    if (account.email_address.toString().includes(query.toLowerCase())) {
      return account;
    }
    if (account.account_status.toLowerCase().includes(query.toLowerCase())) {
      return account;
    }
    }).map((account) => {
  return (
    <tbody key={account.account_id}>
  <tr className={styles.tableRow}>
<td className={styles.tableData}>{account.account_id}</td>
<td className={styles.tableData}>{account.role}</td>
<td className={styles.tableData}>{account.first_name}</td>
<td className={styles.tableData}>{account.last_name}</td>
<td className={styles.tableData}>{account.username}</td>
<td className={styles.tableData}>{account.password}</td>
<td className={styles.tableData}>{account.email_address}</td>
<td className={styles.tableData}>{account.account_status}</td>
</tr>
</tbody>
);
                    })}
                </table>
            </main>
        </div>
    )
}
    
  
